pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
globals = {}
--------------sub-module-c:\users\autod\onedrive\dokumente\pico8\carts\snoodle\canon.lua---------------------
m42f75baf20d2ed1098fe910e9182122a = function()
    local canon = {}
local _initrotation = 0.5
local _tankcoords = {
    x = 60,
    y = 116
}

function canon:new(obj)
    obj = obj or {}
    obj.rotation = _initrotation
    obj.currentmonster = nil
    self.a = 1
    setmetatable(obj, self)
    self.__index = self
    return obj
end

function canon:draw()
--    print(self.a, 64, 64, 13)

    -- draw canon circles
    for i = 2, 4 do
        local s = 18 -- sprite  nr
        local m = 0 -- margin for last circle
        if (i == 4) then
            s = 19 -- last canon sprite
            m = 0.5
        end
        spr(s, (5 + m) * i * (sin(self.rotation)) + _tankcoords.x, (5 + m) * i * cos(self.rotation) + _tankcoords.y)
    end

    --print(self.currentmonster, _tankcoords.x, _tankcoords.y, 14);
end

function canon:update()
    --convert mouse x coord to rotation
    if (stat(32) > 17 and stat(32) < 79) then
        self.rotation = 1 / 128 * stat(32)
    end

    --update monster position
    if (self.currentmonster) then
        self.currentmonster:setcoords(nil, _tankcoords.x, _tankcoords.y) -- align monster to  the midle of the canon tank
    end

    if (btn(0, 0)) then
        self.rotation = self.rotation > 0.27 and self.rotation - 0.001 * self.a or 0.27
    end
    if (btn(1, 0)) then
        self.rotation = self.rotation < 0.73 and self.rotation + 0.001 * self.a or 0.73
    end

    if (not btn(0, 0) and not btn(1, 0)) then
        self.a = 1 --reset canon rotation when released buttons
    else
        self.a = self.a < 20 and self.a + 0.33 or 20 --acclerate canon rotation when holding button
    end

    if (btn(4, 0)) then
        self:fire()
    end
end

function canon:mountmonster(this, monster)
    self.currentmonster = monster
end

function canon:fire()
    if (self.currentmonster) then
        self.currentmonster:settrajectory(nil, self.rotation)
        self.currentmonster = nil
    end
end

return canon

end
m42f75baf20d2ed1098fe910e9182122a = m42f75baf20d2ed1098fe910e9182122a()
--------------sub-module-c:\users\autod\onedrive\dokumente\pico8\carts\snoodle\monster.lua---------------------
mebfe0a8595bbbc9dd2c88f55e7316bd7 = function()
    local monster = {}
local _speed = 0.1 --higher is faster
function monster:new(obj)
    obj = obj or {}
    obj.sprite = 1 + flr(rnd(7)) * 2
    obj.x = -64
    obj.y = -64
    obj.distance = 0
    obj.spritecooldown = rnd(40)
    obj.altersprite = false
    obj.direction = nil
    setmetatable(obj, self)
    self.__index = self
    return obj
end

function monster:draw()
    spr(self.altersprite and self.sprite + 1 or self.sprite, self.x, self.y)
end

function monster:animateface()
    self.spritecooldown = self.spritecooldown - 1
    if (self.spritecooldown < 0) then
        self.altersprite = not self.altersprite
        self.spritecooldown = rnd(40)
    end
end

function monster:update()

    self:animateface();


    if (self.direction) then
        self.x = self.x + sin(self.direction) * self.distance
        self.y = self.y + cos(self.direction) * self.distance
        self.distance = self.distance + _speed

        if (self.y <= 0) then
            self.distance = 0  --stop flying
        end

        if (self.x <= 0 or self.x >= 127) then
            self.direction = 1 - self.direction
        end
    end

    if (distance == 100) then
        remove(globals.monsters, self)
    end
end

function monster:setcoords(this, x, y)
    self.x = x
    self.y = y
end

function monster:settrajectory(this, direction)
    self.direction = direction
end

return monster

end
mebfe0a8595bbbc9dd2c88f55e7316bd7 = mebfe0a8595bbbc9dd2c88f55e7316bd7()
--------------sub-module-c:\users\autod\onedrive\dokumente\pico8\carts\snoodle\lift.lua---------------------
mb0de3a3ccbdbdd0e0742cda2d8b4752d = function()
    local lift = {}
local _initposition = 122 -- vertical lift positon
local _xcoord = 120 -- horizontal lift position
local monster = mebfe0a8595bbbc9dd2c88f55e7316bd7

function lift:new(obj)

    obj = obj or {}
    obj.position = _initposition
    obj.stage = 0
    obj.currentmonster = nil
    setmetatable(obj, self)
    self.__index = self
    return obj
end

function lift:draw()
    spr(21, _xcoord, self.position)
--    print(self.currentmonster, _xcoord - 14, 90, 3)
end

function lift:update()
    if self.currentmonster then
        self.currentmonster:setcoords(nil, _xcoord - 1, self.position - 8) --move monster with lift
    else
        self.stage = 1
    end

    self:addmonster() -- add monster when lift is empty
end

function lift:addmonster()

    if self.stage == 1 then --descend

        if globals.i % 5 then
            self.position = self.position + 1
        end

        if self.position > 136 then -- below surface

            local currentmonster = monster:new() --assign new monster
            add(globals.monsters, currentmonster)
            self.currentmonster = currentmonster

            self.stage = 2
        end
    end

    if self.stage == 2 then -- lift

        if globals.i % 5 then
            self.position = self.position - 1
        end

        if self.position <= _initposition then --lift is done and ready
            self.stage = 0
        end
    end
end

return lift
end
mb0de3a3ccbdbdd0e0742cda2d8b4752d = mb0de3a3ccbdbdd0e0742cda2d8b4752d()
--------------sub-module-c:\users\autod\onedrive\dokumente\pico8\carts\snoodle\robot.lua---------------------
meaad72aeae06ceb1154d27f2099820e1 = function()
    local robot = {}
local _initpos = 110 -- init  x coord
local _initdirection = 0 -- init arm position
local _ycoord = 115 -- robots permament vertical coord
local _animspeed = 1 -- higher is slower
function robot:new(obj)
    obj = obj or {}
    obj.sprite = 20
    obj.x = _initpos
    obj.y = _ycoord
    obj.direction = _initdirection
    obj.stage = 0
    obj.currentmonster = nil
    obj.canon = nil
    obj.lift = nil
    obj.armsdistance = nil
    obj.monsterdistance = nil
    setmetatable(obj, self)
    self.__index = self
    return obj
end

--revolve object around robot
function robot:revolve(this, distance)
    return {
        x = distance * cos(self.direction) + self.x;
        y = distance * sin(self.direction) + self.y;
    }
end

function robot:registercanon(this, canon)
    self.canon = canon
end

function robot:registerlift(this, lift)
    self.lift = lift
end

function robot:draw()

    spr(self.sprite, self.x, self.y) --body

    line(self.x + 3, self.y + 4, self.armsdistance.x + 3, self.armsdistance.y + 4, 11) --arm
    circ(self.armsdistance.x + 3, self.armsdistance.y + 4, 1, 8) -- upper claw

    --    print(self.currentmonster, self.x-5, self.y-6, 4)
end

function robot:grabmonster()
    self.currentmonster = self.lift.currentmonster
    self.lift.currentmonster = nil
    self.stage = 1
end

function robot:update()

    if (self.stage == 0 and not self.canon.currentmonster and self.lift.currentmonster) then
        self:grabmonster()
    end

    self.armsdistance = self:revolve(nil, 5)
    self.monsterdistance = self:revolve(nil, 9)

    if self.currentmonster then
        self.currentmonster:setcoords(nil, self.monsterdistance.x - 2, self.monsterdistance.y) -- transport monster
    end

    if self.stage == 1 then -- rotate to canon
        if globals.i % _animspeed == 0 then
            if self.direction < 0.48 then
                self.direction = self.direction + 0.05
            else
                self.stage = 2
            end
        end
    end

    if self.stage == 2 then -- run to canon
        if globals.i % _animspeed == 0 then
            if self.x > 65 then
                self.x = self.x - 2
            else
                self.direction = _initdirection --rotate back to lift
                self.canon:mountmonster(nil, self.currentmonster)
                self.currentmonster = nil

                self.stage = 3
            end
        end
    end

    if self.stage == 3 then --return to lift
        if globals.i % _animspeed == 0 then
            if self.x < _initpos then
                self.x = self.x + 3
            else
                self.stage = 0
            end
        end
    end
end

return robot;
end
meaad72aeae06ceb1154d27f2099820e1 = meaad72aeae06ceb1154d27f2099820e1()
--------------sub-module-c:\users\autod\onedrive\dokumente\pico8\carts\snoodle\grid.lua---------------------
m0a253bbb1f61064d2cf908778f24fca5 = function()
    local grid = {}

function grid:new()
    obj = obj or {}
    obj.threat = 0
    setmetatable(obj, self)
    self.__index = self
    return obj
end

function grid:update()
end

function grid:draw()

    for y = 0, 13 do
        local o = y % 2 == 0 and true or false
        for x = 0, 15 do
            if (x == 15 and not o) then
                break
            end
          --  spr(4, o and x * 8 or x * 8 + 4, y * 8)
        end
    end
end

return grid
end
m0a253bbb1f61064d2cf908778f24fca5 = m0a253bbb1f61064d2cf908778f24fca5()

--------------root-module---------------------
--snoodle
--by kepikoi
canon = m42f75baf20d2ed1098fe910e9182122a
lift = mb0de3a3ccbdbdd0e0742cda2d8b4752d
robot = meaad72aeae06ceb1154d27f2099820e1
grid = m0a253bbb1f61064d2cf908778f24fca5

function _init()
    --    poke(0x5f2d, 1) --mouse support

    globals.i = 0
    globals.monsters = {}

    canon = canon:new();
    lift = lift:new({}, globals.monsters);
    robot = robot:new();
    grid = grid:new();

    --    lift:registerrobot(nil, robot);
    robot:registercanon(nil, canon);
    robot:registerlift(nil, lift);

    -- init first monster
    lift:addmonster();

    --eanble cheats
    globals.cheats = {}
end

--append value to table while retaining max table entries. oldest value will be removed on insertion when table is full
function tableappend(table, value, max)
    if (#table > max - 1) then
        del(table, table[1])
    end
    add(table, value)
end

function tabletostring(table)
    local s = ''
    for k in all(table) do
        s = s .. k
    end
    return s
end

function listentocheats()

    if (tabletostring(globals.cheats) == 'uuddlrlrba') then
        sfx(33)
    end

    if (btnp(2, 0)) then tableappend(globals.cheats, 'u', 10) end
    if (btnp(3, 0)) then tableappend(globals.cheats, 'd', 10) end
    if (btnp(0, 0)) then tableappend(globals.cheats, 'l', 10) end
    if (btnp(1, 0)) then tableappend(globals.cheats, 'r', 10) end
    if (btnp(4, 0)) then tableappend(globals.cheats, 'b', 10) end
    if (btnp(5, 0)) then tableappend(globals.cheats, 'a', 10) end

end

function _update60()
    -- iterate i counter
    globals.i = globals.i + 1

    for m in all(globals.monsters) do
        m:update()
    end

    canon:update()
    lift:update()
    robot:update()
    grid:update()

    if (globals.cheats) then
        listentocheats()
    end
end

function _draw()
    cls()

    -- draw bg map
    map(0, 0, 0, 0, 128, 128, 0)

    --draw bounds
    line(0, 0, 0, 127, 1)
    line(127, 0, 127, 127, 1)


    canon:draw()
    lift:draw()

    for m in all(globals.monsters) do
        m:draw()
    end

    robot:draw()
    grid:draw()

end


__gfx__
000000003bbbbbb33bbbbbb30888888008888880001111000011110070707007700707070001200000012000009aaa00009aaa00095555900955559000000000
00000000b33bb33bb33bb33b0288882002288220011111100111111007cccc7007cccc7060122206601d2d0605aaaaa005aaaaa05cc55cc55c1551c500000000
00700700b77bb77bb72bb27b8228822882c88c2811d71d71117717717cc2c2c07cc2c2c7562d2d655627276509555550095555505c155c155cc55cc500000000
00077000b72b327bbbbb3bbb88c88c8888c88c8811771771117d1d710cc6c6c70cc6c6c001d72720012222209a55a55a9a55a55a055757500557575000000000
000770003bb33bb3bbb33bbb888998888889988811115111111151117cdcccc00cccccc702222220022222209aaaaaaa9aaaaaaa00dd7d0000dd7d0000000000
007007003222222332222223281616222816162211188111111111110ccddc077ccddc001222222212161612098888a009aaaaa00dddddd00dddddd000000000
00000000322882233b2222b30855550008111100018008100188881007ccc07007ccc0702221112222111112098778a0098888a00d2222dd0dd22ddd00000000
0000000003b88b3003bbbb30028888200255552000188100001111007070700770070707221222222222222200988a00009aaa000dd22dd00d2222d000000000
056666000566660000000000000000000077700076667f6500400450000000000000000000000000000000000000000000000000000000000000000000000000
06666660066666600056500000499f0007ccc7000f77665040540009000000000000000000000000000000000000000000000000000000000000000000000000
0669696006696960056f65000499aaf07ccccc700f77665050000045000000000000000000000000000000000000000000000000000000000000000000000000
066666600666666006f7f6000499aaa000efe0000f77665000944500000000000000000000000000000000000000000000000000000000000000000000000000
0666566006665660056f650004999a900defed000f77665040450440000000000000000000000000000000000000000000000000000000000000000000000000
056666500566665000565000024999400defed000f77665000000004000000000000000000000000000000000000000000000000000000000000000000000000
006556000065560000000000002494000d000d000f77665054044045000000000000000000000000000000000000000000000000000000000000000000000000
00066000000660000000000000000000ddb0ddb00f77665040050900000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555055500f666005550055505550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000550555055000f6cccc660005500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555500fcc0000cc6005500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005550555555fc00000000c655550555050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550fc0000000000c60005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555550550fc0000000000c60005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000050555555fc000000000000c6055505550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555fc000000000000c6500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010010050005000fc000000000000c6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010010055055505fc000000000000c7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10010120005000500fc0000000000c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020100107777777776c0000000000c77000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001066666666666c00000000c766000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020010666666666666cc0000cc6666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0010001066666666666666cccc666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
20100010666666666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3a3a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2424242424242422232424242424242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313132333131313131310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1616161616161616161616160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1616161616161600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0006000000000000001605010050200501b03019530185200e240135500d2500c2600e5601852016550185001a5001e5002e00033000370000200002000020000200001000010000100001000010000100001000
